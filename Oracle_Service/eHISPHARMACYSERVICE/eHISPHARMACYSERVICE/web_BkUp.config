<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
		<section name="enterpriseLibrary.ConfigurationSource" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.ConfigurationSourceSection, Microsoft.Practices.EnterpriseLibrary.Common, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null"/>
	</configSections>
	<enterpriseLibrary.ConfigurationSource selectedSource="File Configuration Source">
		<sources>
			<add name="File Configuration Source" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.FileConfigurationSource, Microsoft.Practices.EnterpriseLibrary.Common, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null" filePath="ApplicationBlocks.config"/>
			<add name="System Configuration Source" type="Microsoft.Practices.EnterpriseLibrary.Common.Configuration.SystemConfigurationSource, Microsoft.Practices.EnterpriseLibrary.Common, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null"/>
		</sources>
	</enterpriseLibrary.ConfigurationSource>
	<system.web>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
		<compilation debug="true" strict="false" explicit="true">
			<assemblies>
				<add assembly="System.Transactions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Web.RegularExpressions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Management, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="SMDiagnostics, Version=3.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="Microsoft.Transactions.Bridge, Version=3.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.IdentityModel.Selectors, Version=3.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Messaging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="Oracle.DataAccess, Version=2.102.2.20, Culture=neutral, PublicKeyToken=89B483F429C47342"/>
				<add assembly="System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.IdentityModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Runtime.Serialization, Version=3.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies>
		</compilation>
		<pages>
			<namespaces>
				<clear/>
				<add namespace="System"/>
				<add namespace="System.Collections"/>
				<add namespace="System.Collections.Specialized"/>
				<add namespace="System.Configuration"/>
				<add namespace="System.Text"/>
				<add namespace="System.Text.RegularExpressions"/>
				<add namespace="System.Web"/>
				<add namespace="System.Web.Caching"/>
				<add namespace="System.Web.SessionState"/>
				<add namespace="System.Web.Security"/>
				<add namespace="System.Web.Profile"/>
				<add namespace="System.Web.UI"/>
				<add namespace="System.Web.UI.WebControls"/>
				<add namespace="System.Web.UI.WebControls.WebParts"/>
				<add namespace="System.Web.UI.HtmlControls"/>
			</namespaces>
		</pages>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
		<authentication mode="Windows"/>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
	</system.web>
	<system.serviceModel>
		<behaviors>
			<serviceBehaviors>
				<behavior name="PharmacyServiceBehaviour">
					<serviceDebug includeExceptionDetailInFaults="true"/>
					<!-- 
          The serviceMetadata behavior allows one to enable metadata (e.g. WSDL, Policy) publishing.
          This configuration enables publishing of such data over HTTP GET.
          -->
					<serviceMetadata httpGetEnabled="true"/>
					<serviceCredentials>
						<!-- 
            The serviceCredentials behavior allows one to define validation parameters for issued tokens.
            This configuration adds the "STS" certificate to a list of known certificates. This
            means that the service will accept tokens issued by "STS".
            -->
						<issuedTokenAuthentication>
							<knownCertificates>
								<add storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindBySubjectDistinguishedName" findValue="CN=STS"/>
							</knownCertificates>
						</issuedTokenAuthentication>
						<!-- 
            The serviceCredentials behavior allows one to define a service certificate.
            A service certificate is used by a client to authenticate the service and provide message protection.
            This configuration references the "localhost" certificate installed during setup of the sample.
            -->
						<serviceCertificate storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectDistinguishedName" findValue="CN=localhost"/>
					</serviceCredentials>
					<!--<serviceAuthorization serviceAuthorizationManagerType="eHIS.AHC.ServiceImplementation.AHCManagerAuthorizer,eHIS.AHC.ServiceImplementation" principalPermissionMode="Custom"/>-->
				</behavior>
			</serviceBehaviors>
		</behaviors>
		<services>
			<service name="eHIS.Pharmacy.ServiceImplementation.PharmacyManager" behaviorConfiguration="PharmacyServiceBehaviour">
				<endpoint address="http://01hw150892/eHISPharmacyServices/PharmacyManager.svc" binding="wsFederationHttpBinding" bindingConfiguration="ApolloFederationBinding" contract="eHIS.Pharmacy.ServiceContracts.IPharmacyManager"/>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
		</services>
		<bindings>
			<wsHttpBinding>
				<binding name="transactionalWsatHttpBinding" transactionFlow="true" closeTimeout="00:30:00" openTimeout="00:30:00" receiveTimeout="00:30:00" sendTimeout="00:30:00" maxReceivedMessageSize="2147483647" maxBufferPoolSize="2000000">
					<readerQuotas maxStringContentLength="2147483647"/>
				</binding>
			</wsHttpBinding>
			<wsFederationHttpBinding>
				<binding name="ApolloFederationBinding" transactionFlow="true" closeTimeout="00:30:00" openTimeout="00:30:00" receiveTimeout="00:30:00" sendTimeout="00:30:00" maxReceivedMessageSize="2147483647" maxBufferPoolSize="2000000">
					<readerQuotas maxStringContentLength="2147483647"/>
					<security mode="Message">
						<message issuedKeyType="SymmetricKey" issuedTokenType="http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1">
							<!-- Metadata address for Security Token Service -->
							<issuerMetadata address="http://01hw107234:8383/eHISSecurityService/SecurityManager.svc/mex">
								<identity>
									<certificateReference storeLocation="CurrentUser" storeName="TrustedPeople" x509FindType="FindBySubjectDistinguishedName" findValue="CN=STS"/>
								</identity>
							</issuerMetadata>
						</message>
					</security>
				</binding>
			</wsFederationHttpBinding>
		</bindings>
	</system.serviceModel>
	<appSettings>
		<add key="LogPolicy" value="Log In Database Policy - Custom Messages from file"/>
		<add key="GetMessagePolicy" value="Get Message policy"/>
		<add key="SQLBusinessErrrorNumber" value="50000"/>
		<add key="MinimumBusinessErrrorNumber" value="20000"/>
		<add key="MaximumBusinessErrrorNumber" value="20999"/>
		<add key="20010" value="TCS.HIS.Service.Registration.DataAccess.DuplicatePatientException"/>
		<add key="BusinessValidationRuleSet" value="RuleSetA"/>
		<add key="DataValidationRuleSet" value="RuleSetB"/>
		<add key="X509CertificateSubject" value="CN=STS"/>
		<add key="Issuer" value="STS"/>
		<add key="ReplacePolicy" value="Exception Replace Policy"/>
		<add key="PharmacyConfigXmlFilePath" value="C:/eHISApplicationConfigXmlFilePath/PharmacyService/Configuration.xml"/>
	</appSettings>
	<connectionStrings>
		<add name="ErrorHandlerConnectionString" providerName="System.Data.OracleClient" connectionString="Data Source = ehisdev; User Id = ehisarcherror; Password = ehisarcherror"/>
		<add name="eHisDatabase" connectionString="Data Source = aplthyd; User Id = securitydev; Password = securitydev_stg_aptc" providerName="System.Data.OracleClient"/>
	</connectionStrings>
</configuration>
